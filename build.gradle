plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven { url "https://maven.nucleoid.xyz/" }
	/*maven {
		name = "Enchantment Descriptions"
		url = 'https://maven.blamejared.com'
	}*/
	maven {
		name = "Patchouli" // https://github.com/Vazkii/Patchouli
		url = 'https://maven.blamejared.com'
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = "entity reach attribute"
		url = "https://maven.jamieswhiteshirt.com/libs-release/"
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "Curse"
		url = 'https://cfa2.cursemaven.com'
	}
	maven {
		name = "Ears"
		url "https://repo.unascribed.com"
		content {
			includeGroup "com.unascribed"
		}
	}
	mavenCentral()
}

dependencies {
	// jetbrains annotations
	implementation 'org.jetbrains:annotations:23.1.0'

	// graph api and its dependencies
	implementation include('org.jgrapht:jgrapht-core:1.5.1')
	implementation include('org.jheaps:jheaps:0.13')

	// Some other dependency is adding annotations, and it throws an error without this
	compileOnly ("com.demonwav.mcdev:annotations:1.0")

	// fabric & api
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// mine
	modImplementation "maven.modrinth:Revelationary:${project.revelationary_version}"
	modImplementation include("maven.modrinth:AdditionalEntityAttributes:${project.additional_entity_attributes_version}")
	modImplementation include("de.dafuqs:Arrowhead:${project.arrowhead_version}")
	modImplementation include("com.github.DaFuqs:DimensionalReverb:${project.dimensional_reverb_version}")
	modImplementation include("maven.modrinth:fractal-lib:${project.fractal_version}")

	// we need a bit of concern
	modImplementation include("azzy.fabric:incubus-core:${project.incubus_core_version}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }
	modApi("com.terraformersmc:modmenu:${project.modmenu_version}")

	modImplementation "eu.pb4:common-protection-api:${project.cpa_version}"

	// https://maven.blamejared.com/vazkii/patchouli/Patchouli/
	modImplementation ("vazkii.patchouli:Patchouli:${project.patchouli_version}")

	// https://github.com/shedaniel/RoughlyEnoughItems
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	modApi "dev.architectury:architectury-fabric:${project.architectury_version}"

	// https://github.com/emilyploszaj/emi
	modCompileOnly "dev.emi:emi-fabric:${emi_version}"

	switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
		case "rei": modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"); break
		case "emi": modLocalRuntime("dev.emi:emi-fabric:${emi_version}"); break
		case "disabled": break
		default: println("Unknown recipe viewer specified: $recipe_viewer. Must be EMI, REI or disabled.")
	}

	// https://github.com/emilyploszaj/trinkets
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	// https://github.com/OnyxStudios/Cardinal-Components-API/wiki/
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-level:${project.cca_version}")

	modImplementation include("com.github.emilyploszaj:step-height-entity-attribute:${project.step_height_attribute_version}")
	modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")

	implementation include("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")

	// https://github.com/Terrails/colorful-hearts
	// Thanks to yurisuika's Raised for the head-up (https://github.com/yurisuika/Raised/blob/Fabric-1.19/build.gradle)
	modCompileOnly ("curse.maven:colorful-hearts-854213:${project.colorful_hearts_version}") {transitive = false}
	// Testing
//	modLocalRuntime ("curse.maven:colorful-hearts-854213:${project.colorful_hearts_version}") {transitive = false}
//	modLocalRuntime ("com.electronwill.night-config:core:${project.nightconfig_version}")
//	modLocalRuntime ("com.electronwill.night-config:toml:${project.nightconfig_version}")

	// Ears compact by Maya!
	modCompileOnly ("com.unascribed:ears-api:${project.ears_version}")

	// Soft testing-only dependencies:
	//modRuntimeOnly 'com.github.DaFuqs:PaginatedAdvancements:1.19-SNAPSHOT'
	// Descriptions for all Enchantments https://maven.blamejared.com/net/darkhax/enchdesc/
	//modCompileOnly("net.darkhax.enchdesc:EnchantmentDescriptions-Common-${project.enchantment_descriptions_mc_version}:${project.enchantment_descriptions_mod_version}")
	//modRuntimeOnly("squeek.appleskin:appleskin-fabric:mc1.18.2-2.4.1") { exclude module: 'modmenu' }
}

loom {
	accessWidenerPath = file("src/main/resources/spectrum.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    it.options.release = 17 // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE.md") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		mavenLocal()
	}
}
